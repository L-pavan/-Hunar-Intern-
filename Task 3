# Import necessary libraries 
import pandas as pd 
import numpy as np 
from sklearn.model_selection import train_test_split 
from sklearn.preprocessing import StandardScaler 
from sklearn.neighbors import KNeighborsClassifier 
from sklearn.metrics import classification_report, accuracy_score, confusion_matrix 
# Load the dataset 
file_path = r"C:\Users\pavan\Downloads\breast cancer.csv" 
data = pd.read_csv(file_path) 
# Display the first few rows to understand the structure 
print(data.head()) 
# Data preprocessing 
# Assuming the target column is labeled as 'diagnosis', with 'M' for malignant and 'B' for 
benign 
# Replace 'M' with 1 and 'B' with 0 for binary classification 
data['diagnosis'] = data['diagnosis'].map({'M': 1, 'B': 0}) 
# Separate features and target 
X = data.drop(columns=['diagnosis', 'Unnamed: 32'], errors='ignore')  # Drop irrelevant 
columns 
y = data['diagnosis'] 
# Split the dataset into training and testing sets 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) 
# Standardize the features 
scaler = StandardScaler() 
X_train = scaler.fit_transform(X_train) 
X_test = scaler.transform(X_test) 
# Initialize the KNN classifier 
knn = KNeighborsClassifier(n_neighbors=5)  # Use 5 neighbors (default) 
# Train the model 
knn.fit(X_train, y_train) 
# Make predictions 
y_pred = knn.predict(X_test) 
# Evaluate the model 
print("Accuracy:", accuracy_score(y_test, y_pred)) 
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred)) 
print("Classification Report:\n", classification_report(y_test, y_pred))
